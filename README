
Finance
-- Utilities to deal with financial things.

Synopsis
--------
Finance provides the classes for financial value objects [1].
`Money` [2] and `Price`, which is a taxed version of `Money`.

This project is inspired by the Sebastian Bergmann's "Money" project [3]
as well as Rob Pike's ivy [4].

For calculations `MoneySum` and `PriceSum` are provided.

Empty values are represented by Null objects.

[1] http://martinfowler.com/bliki/ValueObject.html
[2] http://martinfowler.com/eaaCatalog/money.html
[3] https://github.com/sebastianbergmann/money
[4] https://github.com/robpike/ivy
    https://www.youtube.com/watch?v=PXoG0WX0r_E
[5] http://en.wikipedia.org/wiki/Null_Object_pattern

Mode of Operation
-----------------

1. Value objects of different levels cannot be mixed.
   > Just `Price`s can be added to `PriceSum`. A `Money` object
     and `Price` object cann be subtracted from eachother.

2. All financial value objects must fulfill a given minimum interface.
   > This allows for output in a formatted unified way. And in general
     simplifies things "down the way" to rendering.

3. For highest preciscion amount is always integer.
   > Except when calculating sums internally.

??? 4. When in doubt `net` is the default price type, `0` zero

Ambiguties when comparing Prices
--------------------------------

Price and Prices classes don't have comparison methods. You must
first retrieve the net from Price as a Money object then compare
those. Otherwise it's not clear what you are comparing: net or
gross amounts.

Copyright & License
-------------------
This library is Copyright (c) 2014 Atelier Disko - All rights reserved.

-- This software is proprietary and confidential. Redistributions   --
-- not permitted. Unless required by applicable law or agreed to    --
-- in writing, software distributed on an "AS IS" BASIS, WITHOUT    --
-- WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. --

Installation
------------
The preferred installation method is via composer. You can add
the library as a dependency via:

$ composer require atelierdisko/finance

Running the Tests
-----------------
The preferred installation method is via composer. You can add
the library as a dependency via:

$ cd finance
$ composer install --dev
$ vendor/bin/phpunit tests

