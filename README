
Finance
-- Utilities to deal with financial things.

Synopsis
--------
Finance provides the classes for financial value objects [1].
`Money` [2] and `Price`, which is a taxed version of `Money`.

This project is built on Sebastian Bergmann's "Money" project [3]
and inspired by Rob Pike's ivy [4].

For calculations of mixed currency and/or mixed tax rates `Monies` and `Prices`
are provided.

Empty values are represented by Null objects. `NullMoney` and `NullPrice`. There
is no `NullCurrency` instead `Currency('XXX')` is used.

[1] http://martinfowler.com/bliki/ValueObject.html
[2] http://martinfowler.com/eaaCatalog/money.html
[3] https://github.com/sebastianbergmann/money
[4] https://github.com/robpike/ivy
    https://www.youtube.com/watch?v=PXoG0WX0r_E
[5] http://en.wikipedia.org/wiki/Null_Object_pattern

Mode of Operation
-----------------

1. Value objects of different levels cannot be mixed.
   > Just `Price`s can be added to `PriceSum`. A `Money` object
     and `Price` object can't be added to eachother.

2. Single value objects (Money and Price) must fulfill a given minimal interface.
   > This allows for output in a formatted unified way. And in general
     simplifies things "down the way" to rendering.

3. For highest precision amount is always cast to integer.

Ambiguties when comparing Prices
--------------------------------

The Price class doesn't have comparison methods. You must
first retrieve the net from Price as a Money object then compare
those. Otherwise it's not clear what you are comparing: net or
gross amounts.

Compatibilities between Objects
-------------------------------

Money objects can be added to Money objects, as long as they have
the same currencies.

The Monies object allows for adding and subtracting Money objects with
different currencies.

Price objects can be added to Price objects, as long as they have
the same currencies and rate.

The Prices object allows for adding and subtracting Price objects with
different currencies and rates.

Copyright & License
-------------------
This library is Copyright (c) 2014 Marius Wilms - All rights reserved.
This library is Copyright (c) 2017 Atelier Disko - All rights reserved.

Use of this source code is governed by a BSD-style
license that can be found in the LICENSE file.

Installation
------------
The preferred installation method is via composer. You can add
the library as a dependency via:

$ composer require mariuswilms/finance

Running the Tests
-----------------
The preferred installation method is via composer. You can add
the library as a dependency via:

$ cd finance
$ composer install --dev
$ vendor/bin/phpunit tests
